@model WebApplication1.Data.Breed

@using WebApplication1.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore
@inject SignInManager<User> SignIn
@inject UserManager<User> Manager
@{
    ViewData["Title"] = "Create";
}



@if (SignIn.IsSignedIn(User) && await Manager.IsInRoleAsync(Manager.GetUserAsync(User).Result, "admin"))
{
    <h1>Създай порода</h1>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Breeds" class="control-label"></label>
                    <input asp-for="Breeds" class="form-control" />
                    <span asp-validation-for="Breeds" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Създаване" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Върни се назад</a>
    </div>
}
else {
}
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
